import TelegramBot from 'node-telegram-bot-api';
import { CodedError, translate, TranslateErrorEnum } from './utils/deepl-translate';
import { Language } from './utils/lang-detect';
import { TELEGRAM_BOT_TOKEN } from './config/env';

/* -------------------------------------------------------------------------- */
/*  Step1. Telegram‚Äëbot initialization                                       */
/* -------------------------------------------------------------------------- */

const bot = new TelegramBot(TELEGRAM_BOT_TOKEN, { polling: true });

/* -------------------------------------------------------------------------- */
/*  Step2. Fixed language pair (edit if needed)                              */
/* -------------------------------------------------------------------------- */

const PAIR: [Language, Language] = ['ru', 'en']; // Russian ‚Üî English

/* -------------------------------------------------------------------------- */
/*  Step3. Handle every incoming message                                     */
/* -------------------------------------------------------------------------- */

bot.on('message', async (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;
  if (!text) return; // ignore non‚Äëtext updates

  // command entry processing
  if (text.startsWith('/start')) {
    await bot.sendMessage(
      chatId,
      `ü§ñ This bot automatically translates between Russian and English.\n` +
        `Just send a message in one language, and it will be translated to the other.\n\n` +
        `ü§ñ –≠—Ç–æ—Ç –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –º–µ–∂–¥—É —Ä—É—Å—Å–∫–∏–º –∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏–º —è–∑—ã–∫–æ–º.\n` +
        `–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –æ–¥–Ω–æ–º –∏–∑ —è–∑—ã–∫–æ–≤, –∏ –æ–Ω –ø–µ—Ä–µ–≤–µ–¥—ë—Ç –µ–≥–æ –Ω–∞ –¥—Ä—É–≥–æ–π.`,
    );
    return;
  }

  try {
    // translate() auto‚Äëdetects which side of the pair the text belongs to
    const { translated } = await translate(text, ...PAIR);
    await bot.sendMessage(chatId, translated);
  } catch (err: unknown) {
    const e = err as CodedError; // we control what translate() throws

    console.error('\n[‚ùå Translate error]');
    if (e.code) console.error(`Code: ${e.code}`);
    console.error(`Message: ${e.message}\n`);

    const reply =
      e?.code === TranslateErrorEnum.LANG_DETECT
        ? '‚ö†Ô∏è Could not detect the language of the message for the selected pair.'
        : '‚ùå Translation error occurred.';

    await bot.sendMessage(chatId, reply);
  }
});
